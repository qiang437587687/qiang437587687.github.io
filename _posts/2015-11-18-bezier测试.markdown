---
layout: post
title:  Bezier测试
date:   2015-12-07
---



# Bezier相关



​	今天下午研究了一下Bezier相关的东西,先说一下背景,以前都是直接添加一个黑色高度是1的view当做一条直线添加,这样简单直接.不过有点Low?,从内存上来讲为了一条线再去alloc一个view出来代价还是挺大的,如果你这个是在一个循环里面那就悲剧了.可能会造成顿卡.

​	今天一开始的出发点其实也是想简单的划一个三角形神马的,总结一些自己开始做的一些问题和思考吧.有错误希望能联系我呦.

​	一开始我们需要创建一个view,当然了必须要重写对应的drawRect方法就像是这样:

``` 
class MyCanvas: UIView {
    override func drawRect(rect: CGRect) {

    }  
}
```

穿件完成之后再来看看下面的代码和注释(下面这些就是drawRect里面写的一些内容)

``` 
    override func drawRect(rect: CGRect) {
        let  bezierPath = UIBezierPath()
        //创建一个rect 所有的边都内缩百分之5  后面的两个参数 正的是缩小 负的是增大
        let drawingRect = CGRectInset(self.bounds, self.bounds.size.width * 0.05, self.bounds.size.height * 0.05)

        //获取需要的各个点
        let topLeft = CGPointMake(CGRectGetMinX(drawingRect), CGRectGetMinY(drawingRect))

        let topRight = CGPointMake(CGRectGetMaxX(drawingRect),
            CGRectGetMinY(drawingRect))

        let bottomRight = CGPointMake(CGRectGetMaxX(drawingRect),
            CGRectGetMaxY(drawingRect))

        let bottomLeft = CGPointMake(CGRectGetMinX(drawingRect),
            CGRectGetMaxY(drawingRect))

        let center = CGPointMake(CGRectGetMidX(drawingRect),
            CGRectGetMidY(drawingRect))

        bezierPath.moveToPoint(topLeft) //这个是开始的地方
        bezierPath.addLineToPoint(topRight)
        bezierPath.addLineToPoint(bottomLeft)

        //下面这两个函数有意思了,查询了一下addCurveToPoint是根据4个点来确定一个固定曲线(具体的			Bezier曲线问题看下面的网站) 	       
		//  bezierPath.addCurveToPoint(bottomRight, controlPoint1: center, controlPoint2: 			center)
		//addQuadCurveToPoint这个曲线是根据3个点来确定一个唯一的曲线
        bezierPath.addQuadCurveToPoint(bottomRight, controlPoint: center) //
        //使路径闭合，结束绘制(最后一个点会自动连接到初始点)
        bezierPath.closePath() 

        //设定颜色，并绘制它们
        UIColor.greenColor().setFill()
        UIColor.blackColor().setStroke()

        bezierPath.fill()
        bezierPath.stroke()

    }
```

画出来的图形是这个样子的![](/images/Bezier.png)

相关知识[Bezier的理解](http://www.mobibrw.com/?p=12)

作者: 韩大熊宝要姓张         [本人博客](http://handabao.com)

![](/images/开心.gif)